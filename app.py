# -*- coding: utf-8 -*-
"""‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á Density

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uwj9JPZjg33P2VBErF1gJmCuUzM4n0O1
"""

# -*- coding: utf-8 -*-
"""Density

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oFwvr9mWLqOQQuFK2ELikIsS88hk07FK
"""

import gradio as gr

# üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏°‡∏∂‡∏Å (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
def calculate_ink(
    density_current_black, density_target_black, ink_volume_black,
    density_current_blue, density_target_blue, ink_volume_blue,
    density_current_red, density_target_red, ink_volume_red,
    density_current_yellow, density_target_yellow, ink_volume_yellow
):
    k_values = {'‡∏î‡∏≥': 12, '‡∏ü‡πâ‡∏≤': 15, '‡πÅ‡∏î‡∏á': 15, '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á': 20}  # ‡∏Ñ‡πà‡∏≤ K ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏µ
    densities = {
        "‚ö´Ô∏è ‡∏î‡∏≥": (density_current_black, density_target_black, ink_volume_black),
        "üîµ ‡∏ü‡πâ‡∏≤": (density_current_blue, density_target_blue, ink_volume_blue),
        "üî¥ ‡πÅ‡∏î‡∏á": (density_current_red, density_target_red, ink_volume_red),
        "üü° ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": (density_current_yellow, density_target_yellow, ink_volume_yellow),
    }

    results = []
    for color, (density_current, density_target, ink_volume) in densities.items():
        # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô None ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ 0 ‡πÅ‡∏ó‡∏ô
        density_current = density_current or 0
        density_target = density_target or 0
        ink_volume = ink_volume or 0

        k_value = k_values[color.split(" ")[1]]  # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ
        ink_adjustment_percent = k_value * (density_target - density_current)  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì %
        ink_adjustment_kg = (ink_adjustment_percent / 100) * ink_volume  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Kg

        if ink_adjustment_kg != 0:  # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏î
            action = "‡πÄ‡∏ï‡∏¥‡∏°" if ink_adjustment_kg > 0 else "‡∏•‡∏î"
            results.append(f"{color}: ‡∏ï‡πâ‡∏≠‡∏á {action} ‡∏´‡∏°‡∏∂‡∏Å {round(abs(ink_adjustment_kg), 2)} Kg")

    return "\n".join(results) if results else "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏™‡∏µ"

# üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤ (‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô None)
def clear_inputs():
    return (
        None, None, None,  # ‡∏î‡∏≥
        None, None, None,  # ‡∏ü‡πâ‡∏≤
        None, None, None,  # ‡πÅ‡∏î‡∏á
        None, None, None,  # ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
        ""  # ‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    )

# üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
css = """
h1, h2, h3 {
    font-size: 22px !important;
    font-weight: bold;
}
#output_box {
    font-size: 20px !important;
}
.gr-textbox textarea {
    font-size: 20px !important;
}
.gr-button {
    font-size: 18px !important;
}
"""

# üîπ ‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á UI ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤
with gr.Blocks(css=css) as demo:
    gr.Markdown("# üñåÔ∏è Ink Density Calculator")
    gr.Markdown("### ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ Density ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏´‡∏°‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î '‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")

    with gr.Row():
        gr.Markdown("**‡∏™‡∏µ**")
        gr.Markdown("**Density ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô**")
        gr.Markdown("**Density ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢**")
        gr.Markdown("**‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏´‡∏°‡∏∂‡∏Å‡πÉ‡∏ô‡∏ñ‡∏±‡∏á (Kg.)**")

    with gr.Row():
        gr.Markdown("‚ö´Ô∏è **‡∏î‡∏≥**")
        density_current_black = gr.Number(value=None)
        density_target_black = gr.Number(value=None)
        ink_volume_black = gr.Number(value=None)

    with gr.Row():
        gr.Markdown("üîµ **‡∏ü‡πâ‡∏≤**")
        density_current_blue = gr.Number(value=None)
        density_target_blue = gr.Number(value=None)
        ink_volume_blue = gr.Number(value=None)

    with gr.Row():
        gr.Markdown("üî¥ **‡πÅ‡∏î‡∏á**")
        density_current_red = gr.Number(value=None)
        density_target_red = gr.Number(value=None)
        ink_volume_red = gr.Number(value=None)

    with gr.Row():
        gr.Markdown("üü° **‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á**")
        density_current_yellow = gr.Number(value=None)
        density_target_yellow = gr.Number(value=None)
        ink_volume_yellow = gr.Number(value=None)

    with gr.Row():
        calculate_button = gr.Button("üî• ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì")
        clear_button = gr.Button("‚ôªÔ∏è ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤")

    # üîπ ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
    output_result = gr.Textbox(label="üìå ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", lines=8, interactive=False, elem_id="output_box")

    # ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    calculate_button.click(
        fn=calculate_ink,
        inputs=[
            density_current_black, density_target_black, ink_volume_black,
            density_current_blue, density_target_blue, ink_volume_blue,
            density_current_red, density_target_red, ink_volume_red,
            density_current_yellow, density_target_yellow, ink_volume_yellow,
        ],
        outputs=output_result,
    )

    # ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
    clear_button.click(
        fn=clear_inputs,
        inputs=[],
        outputs=[
            density_current_black, density_target_black, ink_volume_black,
            density_current_blue, density_target_blue, ink_volume_blue,
            density_current_red, density_target_red, ink_volume_red,
            density_current_yellow, density_target_yellow, ink_volume_yellow,
            output_result,
        ],
    )

# üîπ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Web App
demo.launch(share=True)
